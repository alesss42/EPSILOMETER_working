function [obj,tMaxNow] = epsiAuto_get_updated_data(oldData,newData,tMaxPrevious)

if isempty(newData.epsi)
    disp('There is no new epsi data.')
    obj = oldData;
    tMaxNow = tMaxPrevious;
else
    % Determine whether tMaxPrevious is a datenum or seconds since power on.
    % Depending on what you have, use either 'time_s' or 'dnum' as the
    % timestamp.
    if tMaxPrevious.epsi>7e5
        timestamp = 'dnum';
    else
        timestamp = 'time_s';
    end

    obj = oldData;

    % Get sig
    if isfield(newData.ctd,'sgth')
        newData.ctd.sig=newData.ctd.sgth;
    end
    data = newData;

    % List data fields to add obj
    periphNames = {'epsi','ctd','alt','vnav','gps'};

    %% Get indices and lengths of old and new data for all peripherals
    for p=1:length(periphNames)
        periph = periphNames{p};
        if ~isempty(data.(periph))
            % Get length of array (this should always stay the same)
            nArray.(periph) = numel(obj.(periph).(timestamp));
            % Get last timestamp
            tMaxNow.(periph) = nanmax(data.(periph).(timestamp));
            % Get indices of old data (everything up until tMaxPrevious)
            idxOld.(periph) = obj.(periph).(timestamp)<=tMaxPrevious.(periph);
            % Get length of old data
            nOld.(periph) = sum(idxOld.(periph));
            % Get indices of new data (everything after tMaxPrevious)
            idxNew.(periph) = data.(periph).(timestamp)>tMaxPrevious.(periph);
            % Get length of new data
            nNew.(periph) = sum(idxNew.(periph));
            % Get fields to put new data into structures
            field_list.(periph) = fields(obj.(periph));
        end
    end

    %% Put new data from all peripherals into obj
    for p=1:length(periphNames)
        periph = periphNames{p};
        if ~isempty(data.(periph))
            for iField=1:length(field_list.(periph))

                % Append new data to old data
                

                % Only keep the last nArray indices


                %                 % Where did we leave off after shifting?
                %                 lastIdx = nOld.(periph)-nNew.(periph);
                %                 if lastIdx<0 %If lastIdx is negative, it's the first time you're calling it
                %                     lastIdx = 0;
                %                 end

                % Shift old data forward by nNew
                %If there was data already...
                if sum(idxOld.(periph))>0
                    idxShift = find(idxOld.(periph)) + nNew.(periph);

                    %Move the whole array if it fits in the size limits
                    if sum(idxOld.(periph))>0 && idxShift(end)<=nArray.(periph)
                        obj.(periph).(field_list.(periph){iField})(idxShift,:) ...
                            = obj.(periph).(field_list.(periph){iField})(idxOld.(periph),:);
                        disp('did #1')

                    %Move the first part of the array and cut off the rest if it's too big
                    elseif sum(idxOld.(periph))>0 && idxShift(end)>nArray.(periph)
                        obj.(periph).(field_list.(periph){iField})(nArray.(periph)-length(idxShift)+nNew.(periph):nArray.(periph),:) ...
                            = obj.(periph).(field_list.(periph){iField})(1:length(idxShift)-nNew.(periph)+1,:);
                        disp('did #2')
                    end

                    %                 obj.(periph).(field_list.(periph){iField})(1:end-nNew.(periph),:) ...
                    %                     = obj.(periph).(field_list.(periph){iField})(nNew.(periph)+1:end,:);

                    % Now add the new data
                    obj.(periph).(field_list.(periph){iField})(1:idxShift(1)-1,:) ...
                        = data.(periph).(field_list.(periph){iField})(idxNew.(periph),:);

%                     if strcmp(periph,'alt')
%                         figure(5); hold on;
%                         plot(1:300,obj.alt.dst);
%                         obj.alt
%                         1:idxShift(1)-1
%                         idxNew.(periph).'
%                         pause
%                     end

                %If there was no data already, put data into obj
                elseif sum(idxOld.(periph))==0
                    obj.(periph).(field_list.(periph){iField})(1:nNew.(periph)) ...
                        = data.(periph).(field_list.(periph){iField})(idxNew.(periph));
                end



                %                 obj.(periph).(field_list.(periph){iField})(lastIdx+1:lastIdx+nNew.(periph),:) ...
                %                     = data.(periph).(field_list.(periph){iField})(idxNew.(periph),:);

            end %end loop through data fields
        end %end if that periph exists
    end %end loop through periphs

    clear data
end %if isempty(newData.epsi)
